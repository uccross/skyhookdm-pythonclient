// automatically generated by the FlatBuffers compiler, do not modify

package Tables;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FB_Meta extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static FB_Meta getRootAsFB_Meta(ByteBuffer _bb) { return getRootAsFB_Meta(_bb, new FB_Meta()); }
  public static FB_Meta getRootAsFB_Meta(ByteBuffer _bb, FB_Meta obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FB_Meta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int blobFormat() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int blobData(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int blobDataLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector blobDataVector() { return blobDataVector(new ByteVector()); }
  public ByteVector blobDataVector(ByteVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer blobDataAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer blobDataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long blobSize() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean blobDeleted() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public long blobOrigOff() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long blobOrigLen() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public int blobCompression() { int o = __offset(16); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createFB_Meta(FlatBufferBuilder builder,
      int blob_format,
      int blob_dataOffset,
      long blob_size,
      boolean blob_deleted,
      long blob_orig_off,
      long blob_orig_len,
      int blob_compression) {
    builder.startTable(7);
    FB_Meta.addBlobOrigLen(builder, blob_orig_len);
    FB_Meta.addBlobOrigOff(builder, blob_orig_off);
    FB_Meta.addBlobSize(builder, blob_size);
    FB_Meta.addBlobCompression(builder, blob_compression);
    FB_Meta.addBlobData(builder, blob_dataOffset);
    FB_Meta.addBlobFormat(builder, blob_format);
    FB_Meta.addBlobDeleted(builder, blob_deleted);
    return FB_Meta.endFB_Meta(builder);
  }

  public static void startFB_Meta(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addBlobFormat(FlatBufferBuilder builder, int blobFormat) { builder.addInt(0, blobFormat, 0); }
  public static void addBlobData(FlatBufferBuilder builder, int blobDataOffset) { builder.addOffset(1, blobDataOffset, 0); }
  public static int createBlobDataVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createBlobDataVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startBlobDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addBlobSize(FlatBufferBuilder builder, long blobSize) { builder.addLong(2, blobSize, 0L); }
  public static void addBlobDeleted(FlatBufferBuilder builder, boolean blobDeleted) { builder.addBoolean(3, blobDeleted, false); }
  public static void addBlobOrigOff(FlatBufferBuilder builder, long blobOrigOff) { builder.addLong(4, blobOrigOff, 0L); }
  public static void addBlobOrigLen(FlatBufferBuilder builder, long blobOrigLen) { builder.addLong(5, blobOrigLen, 0L); }
  public static void addBlobCompression(FlatBufferBuilder builder, int blobCompression) { builder.addInt(6, blobCompression, 0); }
  public static int endFB_Meta(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishFB_MetaBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedFB_MetaBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FB_Meta get(int j) { return get(new FB_Meta(), j); }
    public FB_Meta get(FB_Meta obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

